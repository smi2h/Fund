<UserControl x:Class="Fund.Wpf.UI.Views.CreateStockView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:stocks="clr-namespace:Fund.DataLayer.Stock.Entities;assembly=Fund.DataLayer.Stock"
             d:DesignHeight="500"
             d:DesignWidth="500"
             mc:Ignorable="d">
    <UserControl.Resources>

        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="5" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Width" Value="100" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="toolkit:DecimalUpDown">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Width" Value="100" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <Border BorderThickness="2" BorderBrush="DarkRed">
                                <StackPanel>
                                    <AdornedElementPlaceholder
                                        x:Name="errorControl" />
                                </StackPanel>
                            </Border>
                            <TextBlock
                                Text="{Binding AdornedElement.ToolTip    
                        , ElementName=errorControl}"
                                Foreground="Red" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}    
                    , Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <ObjectDataProvider x:Key="stockTypes"
                            MethodName="GetValues"
                            ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="stocks:StockType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style TargetType="toolkit:IntegerUpDown">
            <Setter Property="Width" Value="100" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <Border BorderThickness="2" BorderBrush="DarkRed">
                                <StackPanel>
                                    <AdornedElementPlaceholder
                                        x:Name="errorControl" />
                                </StackPanel>
                            </Border>
                            <TextBlock
                                Text="{Binding AdornedElement.ToolTip    
                        , ElementName=errorControl}"
                                Foreground="Red" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}    
                    , Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Width" Value="100" />
            <Setter Property="Height" Value="30" />
        </Style>
    </UserControl.Resources>

    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100" />
            <ColumnDefinition Width="200" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="45" />
            <RowDefinition Height="45" />
            <RowDefinition Height="45" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <TextBlock Text="StockType:" />
        <ComboBox Grid.Column="1"
                  ItemsSource="{Binding Source={StaticResource stockTypes}}"
                  SelectedItem="{Binding SelectedStockType}" />

        <TextBlock Grid.Row="1" Text="Price:" />
        <toolkit:DecimalUpDown FormatString="C2"
                               Grid.Row="1"
                               Grid.Column="1"
                               Value="{Binding Price, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" />


        <TextBlock Grid.Row="2" Text="Quantity:" />
        <toolkit:IntegerUpDown Grid.Row="2"
                               Grid.Column="1"
                               FormatString="N0"
                               Value="{Binding Quantity, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" />

        <Button Grid.Row="4"
                Grid.ColumnSpan="2"
                HorizontalAlignment="Left"
                Content="CreateStock"
                Command="{Binding AddStockCommand}" />
    </Grid>

</UserControl>